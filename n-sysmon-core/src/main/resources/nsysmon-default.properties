# This file defines the default configuration for N-SysMon. To override these defaults, place a file
#  nsysmon.properties on the root of the class path.
#
# Both files have the same syntax, with nsysmon.properties having precedence over this file's contents.
#
# You can override settings in both files through use of system properties. System properties must however be
#  prefixed by 'nsysmon.'.


# The config-factory must be the fqn of a class that implements AConfigFactory and has a public no-args constructor.
#  This class is instantiated and then provides the configuration for n-sysmon. The default config factory reads
#  and evaluates this file, but other implementations are free to hard-wire everything or read configurations from
#  arbitrary sources.
config-factory = com.nsysmon.config.ADefaultConfigFactory

application-info = com.nsysmon.config.appinfo.ADefaultApplicationInfoProvider
application-info.0.alias = application-name
application-info.1.alias = application-version

# This must be an implementation of the ATimer interface. There is no obvious reason to change this for production,
#  but it may be helpful for testing purposes.
timer = com.nsysmon.util.timer.ASystemNanoTimer

# This must be the fqn of an implementation of AHttpRequestAnalyzer. It is used by AHttpRequestMeasuringFilter (a
#  servlet filter) to categorize HTTP requests when starting measurements based on them.
# The property can be overridden per filter instance using an init-param named nsysmon.http-request-analyzer.
http-request-analyzer = com.nsysmon.measure.http.ASimpleHttpRequestAnalyzer

# This property explicitly set a logger implementation. The default is to use Log4J if available, stdout otherwise.
#  The value of the property must be the fully qualified name of a class with no-args constructor implementing
#  NSysMonLoggerFactory.

# logger = com.nsysmon.config.log.AStdOutLoggerFactory


env-measurers = com.nsysmon.measure.environment.impl.AEnvVarEnvironmentMeasurer, \
                com.nsysmon.measure.environment.impl.ASysPropEnvironmentMeasurer, \
                com.nsysmon.measure.environment.impl.ACpuEnvironmentMeasurer, \
                com.nsysmon.measure.environment.impl.AMemInfoEnvironmentMeasurer, \
                com.nsysmon.measure.environment.impl.AFileSystemsEnvironmentMeasurer, \
                com.nsysmon.measure.environment.impl.AOverviewEnvironmentMeasurer, \
                com.nsysmon.measure.environment.impl.AJarFileEnvironmentMeasurer

scalar-measurers = com.nsysmon.measure.jdbc.AConnectionCounter, \
                   com.nsysmon.measure.scalar.ACpuUtilizationMeasurer, \
                   com.nsysmon.measure.scalar.AJmxGcMeasurer, \
                   com.nsysmon.measure.scalar.AJmxMemMeasurer, \
                   com.nsysmon.measure.scalar.AProcDiskstatsMeasurer, \
                   com.nsysmon.measure.scalar.AProcNetDevMeasurer, \
                   com.nsysmon.measure.scalar.AProcSelfStatMeasurer, \
                   com.nsysmon.measure.scalar.ASystemLoadMeasurer, \
                   com.nsysmon.measure.scalar.ThreadingMeasurer
#                    com.nsysmon.measure.scalar.AJmxTomcatMeasurer, \

timedscalar-measurers = com.nsysmon.measure.scalar.ACpuUtilizationMeasurer


# The following line showcases all currently pre-defined data sinks, defining shorthand names for them.
#  None of them are enabled by default, however the following line can serve as a template for application
#  specific properties files. Just copy the line and remove all data sinks except for those you want.

#data-sinks = log4j, stdout, stderr, cyclic-dump-stdout, cyclic-dump-log4j-debug, cyclic-dump-log4j-info

data-sinks.log4j = com.nsysmon.datasink.log.ALog4JDataSink
data-sinks.stdout = com.nsysmon.datasink.log.AStdOutDataSink
data-sinks.stderr = com.nsysmon.datasink.log.AStdErrDataSink

data-sinks.cyclic-dump-stdout = com.nsysmon.datasink.cyclicdump.AStdOutCyclicMeasurementDumper
data-sinks.cyclic-dump-stdout.0.alias = cyclic-dump-initial-delay-seconds
data-sinks.cyclic-dump-stdout.1.alias = cyclic-dump-interval-seconds
data-sinks.cyclic-dump-stdout.2.alias = averaging-delay-for-scalars-millis

data-sinks.cyclic-dump-log4j-debug = com.nsysmon.datasink.cyclicdump.ALog4JDebugCyclicMeasurementDumper
data-sinks.cyclic-dump-log4j-debug.0.alias = cyclic-dump-initial-delay-seconds
data-sinks.cyclic-dump-log4j-debug.1.alias = cyclic-dump-interval-seconds
data-sinks.cyclic-dump-log4j-debug.2.alias = averaging-delay-for-scalars-millis

data-sinks.cyclic-dump-log4j-info = com.nsysmon.datasink.cyclicdump.ALog4JInfoCyclicMeasurementDumper
data-sinks.cyclic-dump-log4j-info.0.alias = cyclic-dump-initial-delay-seconds
data-sinks.cyclic-dump-log4j-info.1.alias = cyclic-dump-interval-seconds
data-sinks.cyclic-dump-log4j-info.2.alias = averaging-delay-for-scalars-millis

#TODO AHttpJsonOffloadingDataSink

presentation-menus = Context, Trace, Performance, Threads, Memory, Debug

presentation-menus.Context = EnvVar, Scalar, TimedScalars, Monitor
presentation-menus.Context.EnvVar = com.nsysmon.servlet.environment.AEnvVarPageDefinition
presentation-menus.Context.EnvVar.0.alias = not-sorted-alphabetically
presentation-menus.Context.Scalar = com.nsysmon.servlet.environment.AScalarPageDefinition
presentation-menus.Context.TimedScalars = com.nsysmon.servlet.timedscalars.TimedScalarsPageDefinition
presentation-menus.Context.Monitor = com.nsysmon.servlet.monitor.MonitorPageDefinition

presentation-menus.Trace = All, Http, LongestCalls
presentation-menus.Trace.All = com.nsysmon.servlet.trace.ATracePageDefinition
presentation-menus.Trace.All.0 = ALL
presentation-menus.Trace.All.1 = 50
presentation-menus.Trace.Http = com.nsysmon.servlet.trace.ATracePageDefinition
presentation-menus.Trace.Http.0 = HTTP
presentation-menus.Trace.Http.1 = 30
presentation-menus.Trace.LongestCalls = com.nsysmon.servlet.longestcalls.LongestCallsPageDefinition
presentation-menus.Trace.LongestCalls.0 = 100
# Start this datasink on startup
presentation-menus.Trace.LongestCalls.1 = true
# collect only entries matching this regular expression
presentation-menus.Trace.LongestCalls.2 = .*select.*
#presentation-menus.Trace.LongestCalls.2 = RcServiceImpl::
# Rootentries with those strings will not be displayed. Values are comma-separated
presentation-menus.Trace.LongestCalls.3 = executeMassCommunication, communicateWithAPPC
# Example presentation-menus.Trace.LongestCalls.3 = ThisIsSomeStringYouDonNotWantToSee, AnotherStringNotRelevant, AndForFunOneMore

presentation-menus.Performance = DrillDown, Jdbc
presentation-menus.Performance.DrillDown = com.nsysmon.servlet.performance.drilldown.ADrillDownPageDefinition
presentation-menus.Performance.DrillDown.0.alias = drilldown-measurement-initially-started
presentation-menus.Performance.Jdbc = com.nsysmon.servlet.performance.bottomup.AJdbcPageDefinition

presentation-menus.Threads = ThreadDump
presentation-menus.Threads.ThreadDump = com.nsysmon.servlet.threaddump.AThreadDumpPageDefinition
presentation-menus.Threads.ThreadDump.0.alias = application-package

presentation-menus.Memory = MemGc
presentation-menus.Memory.MemGc = com.nsysmon.servlet.memgc.AMemGcPageDefinition
presentation-menus.Memory.MemGc.0.alias = gc-buffer-size

presentation-menus.Debug = Overview, Load, Generate, Correlations
presentation-menus.Debug.Correlations = com.nsysmon.servlet.correlationflow.CorrelationFlowPage
presentation-menus.Debug.Correlations.0.alias = max-correlations
presentation-menus.Debug.SlowCall = com.nsysmon.servlet.correlationflow.CorrelationFlowPage
presentation-menus.Debug.SlowCall.0.alias = slowcall-0-entries
presentation-menus.Debug.SlowCall.1.alias = slowcall-0-indicator
presentation-menus.Debug.SlowCall.2.alias = slowcall-0-mainentry
presentation-menus.Debug.Overview = com.nsysmon.servlet.overview.OverviewDebuggingData
presentation-menus.Debug.Load = com.nsysmon.servlet.overview.LoadableServerDataFiles
presentation-menus.Debug.Generate = com.nsysmon.servlet.overview.DataFileGenerator
# List of PageIds which should be exported. The format is:
# id:timeInMinutes, so tracesAll:5 means "export tracesAll every 5min", the values can be separated by ",".
# e.g.
# tracesAll:5, tracesHttp:10
#presentation-menus.Debug.Generate.0 = tracesAll:5, tracesHttp:10
presentation-menus.Debug.Generate.0 =

# identifier (see page definition class!) of the default page for presentation in the web frontend
default-page = scalars

######################
# general parameters #
######################

# These parameters are expressly meant to be customized

application-name = an application
application-version = V. ???

# a regular expression used to determine whether a given stack frame is 'application' or 'library' code
application-package = com

# Some scalars must be measured as an average over a period of time (e.g. CPU usage). This parameter defines
#  the number of milliseconds over which these values are averaged.
averaging-delay-for-scalars-millis = 1000

# The following two properties limit memory usage, safe guarding against memory leaks and extensive memory usage for
#  long running measurements (e.g. in batch runs).
# If more than this number of measurements are nested, it is assumed that application code erroneously opens
#  measurements without closing them.
max-nested-measurements = 100
# If more than this number of measurements happen withing a single hierarchy, that hierarchy is forcefully closed
#  to prevent n-sysmon from gobbling up all available memory.
max-measurements-per-hierarchy = 100000

# Maximum number of measurements in the timed scalar view.
max-measurements-per-timed-scalar = 2880

# The number of measurements used for the cockit overview.
# This number tells nsysmon, how many of the lastest measurements it has to display.
max-measurements-relevant-for-monitoring = 50

# Number of unique correlations that are stored. Please note this is each entry, this results in
# MainCorrelation -> SubCorrelation being 2 entries.
max-correlations = 10000

# Number of seconds to wait between taking measurements
duration-of-one-timed-scalar = 2

# Determines if drilldown measurements are enabled on N-SysMon startup, e.g. for acquiring data during system startup
drilldown-measurement-initially-started = false

# Tells if to collect sql-parameters in the measurement
collect-sql-parameters = false
# Sets if the server shout ever send tooltipps for the data to the client. overrides collect-sql-parameters
collect-tooltips = false
# Disable Correlation Flow - not working on multi cluster environments
correlation-flow-disabled = true

# Maximum duration considered 'regular' for a measurement. After this time, the measurement is considered 'timed out'.
#  500 milliseconds may seem long, but many of the scalar measurements do disk I/O (albeit with a virtual file system),
#  causing them to take significant time. Most of this time however is spent waiting for I/O and NOT cpu time.
# The main reason for measurements to hit this barrier is GC however.
measurement-timeout-nanos = 5000000000

# If the same measurement times out this number of times in a row, it is permanently disabled to protect the actual
#  system from measurement side effects
max-num-measurement-timeouts = 10

# Maximum duration after which a data call to a data sink is considered 'timed out'. If one or more of the 'dumping'
#  data sinks are active (especially the cyclic-dump one), this timeout will have to be significantly increased.
data-sink-timeout-nanos = 1000000000

# If the same data sink times out this number of times in a row, it is permanently disabled to protect the actual
#  system from measurement side effects
max-num-data-sink-timeouts = 10

# MBeans object for the Tomcat Global Request Processor. Used by Tomcat scalar measurers.
tomcat-global-request-processor = Tomcat:type=GlobalRequestProcessor,name="http-bio-8080"
tomcat-thread-pool = Tomcat:type=ThreadPool,name="http-bio-8080"

# rate at which scalar measurements are dumped
cyclic-dump-interval-seconds = 60

# initial delay before starting to cyclically dump scalar measurements
cyclic-dump-initial-delay-seconds = 0

# This is the number of garbage collections for which N-SysMon stores details. When the buffer is full, the oldest
#  GC is evicted to make room for the new one.
gc-buffer-size = 1000

# This is a list of keys for environment data the children of which are *not* sorted alphabetically but rather presented
#  in the same order the measurer provided them. Entries are separated by a double pipe character ||. Segments are
#  separated by dots, and a question mark ? represents an arbitrary value for a segment, an asterisk * matches all sub paths.
not-sorted-alphabetically = jar-version

# Path where the datafiles are exported and can be opened by the load-data-page
datafile-path = /tmp

slowcall-0-entries = 100
slowcall-0-indicator = TKT-Search
slowcall-0-mainentry = TKT-Main

# monitoring values for timed scalars
timedscalar.ACpuUtilizationMeasurer.cpu\:all-used.medium = 50
timedscalar.ACpuUtilizationMeasurer.cpu\:all-used.high = 80
timedscalar.ACpuUtilizationMeasurer.cpu\:all-used.active = true
timedscalar.ACpuUtilizationMeasurer.cpu\:self-kernel.medium = 50
timedscalar.ACpuUtilizationMeasurer.cpu\:self-kernel.high = 80
timedscalar.ACpuUtilizationMeasurer.cpu\:self-kernel.active = true
timedscalar.ThreadingMeasurer.Current\ Thread\ Count.medium = 40
timedscalar.ThreadingMeasurer.Current\ Thread\ Count.high = 60
timedscalar.ThreadingMeasurer.Current\ Thread\ Count.active = true
timedscalar.ThreadingMeasurer.Daemon\ Thread\ Count.medium = 10
timedscalar.ThreadingMeasurer.Daemon\ Thread\ Count.high = 20
timedscalar.ThreadingMeasurer.Daemon\ Thread\ Count.active = true
timedscalar.ThreadingMeasurer.Threads\ Created.medium = 10
timedscalar.ThreadingMeasurer.Threads\ Created.high = 20
timedscalar.ThreadingMeasurer.Threads\ Created.active = true